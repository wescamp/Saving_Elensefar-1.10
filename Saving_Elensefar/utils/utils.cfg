#textdomain wesnoth-Saving_Elensefar

#define KILL_MENELDUR
    [store_unit]
        [filter]
            id=Meneldur
        [/filter]
        kill=yes
        variable=Meneldur
    [/store_unit]
#enddef

#define RESTORE_MENELDUR
    [unstore_unit]
        x,y=recall,recall
        variable=Meneldur
    [/unstore_unit]
    [heal_unit]
        [filter]
            id=Meneldur
        [/filter]
        amount=999
    [/heal_unit]
#enddef

#define UNSTORE_ENEMY V
    {IF_VAR {V}.revisiting equals yes (
        [then]
            {FOREACH {V}.units a}
                [heal_unit]
                    [filter]
                        id={V}.units[$a].id
                    [/filter]
                    amount=999
                [/heal_unit]
                [unstore_unit]
                    variable={V}.units[$a]
                [/unstore_unit]
            {NEXT a}
            [gold]
                side=2
                amount="${V}.gold"
            [/gold]
            {FOREACH {V}.villages b}
                [capture_village]
                    side=2
                    x,y=${V}.villages[$b].x,${V}.villages[$b].y
                [/capture_village]
            {NEXT b}
            {VARIABLE {V}.revisiting no}
            {CLEAR_VARIABLE {V}.units|,{V}.gold|,{V}.villages}
        [/then]
    )}
#enddef

#define GIVE_EXP TURNS_EASY TURNS_NORMAL TURNS_HARD
    [event]
        name=enemies defeated

        [store_unit]
            [filter]
                side=1
                x=1-999
                y=1-999
            [/filter]
            variable=giveex
        [/store_unit]
#ifdef EASY
        {VARIABLE bonus "$({TURNS_EASY}-$turn_number)"}
#endif
#ifdef NORMAL
        {VARIABLE bonus "$({TURNS_NORMAL}-$turn_number)"}
#endif
#ifdef HARD
        {VARIABLE bonus "$({TURNS_HARD}-$turn_number)"}
#endif
        {FOREACH giveex X}
            {VARIABLE_OP giveex[$X].experience add $bonus}
            [unstore_unit]
                variable=giveex[$X]
            [/unstore_unit]
        {NEXT X}
        {CLEAR_VARIABLE giveex,bonus}
    [/event]
#enddef

#define START_A_SCENE EDGE_X EDGE_Y SHIP_X SHIP_Y KEEP_X KEEP_Y SCENNUM
    [event]
        name=moveto
        first_time_only=no

        [filter]
            x,y={SHIP_X},{SHIP_Y}
            id=Meneldur
        [/filter]
        [message]
            speaker=narrator
            message= _ "Do you really want to run away?"
            [option]
                message= _ "Yes"
                [command]
                    [message]
                        id=Meneldur
                        message= _ "Fall back!"
                        image=wesnoth-icon.png
                    [/message]
                    [set_variable]
                        name=retreatednotwon
                        value=yes
                    [/set_variable]
                    [set_variable]
                        name={SCENNUM}.status
                        value=retreated
                    [/set_variable]
                    {IF_VAR turnsleft less_than 6 (
                        [then]
                            {VARIABLE_OP turnsleft add 1}
                        [/then]
                    )}
                    [store_unit]
                        [filter]
                            side=2
                            canrecruit=no
                        [/filter]
                        variable={SCENNUM}.units
                    [/store_unit]
                    [store_gold]
                        side=2
                        variable={SCENNUM}.gold
                    [/store_gold]
                    [store_villages]
                        side=2
                        variable={SCENNUM}.villages
                    [/store_villages]
                    [endlevel]
                        result=victory
                        bonus=no
                    [/endlevel]
                [/command]
            [/option]
            [option]
                message= _ "No"
                [command]
                    [message]
                        id=Meneldur
                        message= _ "Fight on!"
                    [/message]
                [/command]
            [/option]
        [/message]
    [/event]

    [event]
        name=prestart

        [hide_unit]
            x,y={KEEP_X},{KEEP_Y}
        [/hide_unit]
    [/event]

    [event]
        name=start

        [move_unit_fake]
            x={EDGE_X},{SHIP_X}
            y={EDGE_Y},{SHIP_Y}
            side=1
            type="units/Black Galleon~RC(magenta>red)"
        [/move_unit_fake]
        # 		[item]
        # 			x,y={SHIP_X},{SHIP_Y}
        # 			image="units/black-galleon.png~RC(magenta>red)"
        # 		[/item]
        [terrain]
            x,y={SHIP_X},{SHIP_Y}
            terrain=Wo^Wsd
        [/terrain]
        [move_unit_fake]
            x={SHIP_X},{KEEP_X}
            y={SHIP_Y},{KEEP_Y}
            side=1
            type=$Meneldur.type
        [/move_unit_fake]
        [unhide_unit]
            x,y={KEEP_X},{KEEP_Y}
        [/unhide_unit]
        [recall]
            id=Madru
            placement=leader
        [/recall]
        [recall]
            id=Black the Red
            placement=leader
        [/recall]

        # Madru reminds the player of the possibility of a retreat (for new players)
        {IF_VAR retreat_hint not_equals yes (
            [then]
                [message]
                    id=Madru
                    message=_"Remember we can retreat at any time, just move your leader to the ship."
                [/message]
                [message]
                    id=Black the Red
                    message=_"But then we haven't time to refill our ship..."
                [/message]
                [message]
                    id=Meneldur
                    message=_"I hope it would never be needed."
                [/message]
                {VARIABLE retreat_hint yes}
            [/then]
        )}
    [/event]
#enddef

#define MENELDUR_SIDE
    side=1
    controller=human
    canrecruit=yes
    type=Elvish Mariner
    id=Meneldur
    save_id=Player1
    name= _ "Meneldur"
    unrenamable=yes
    team_name=good
    user_team_name= _"Elensefar's Loyalists"
    #color=blue
    {FLAG_VARIANT long}
#enddef

# #define RECALLMACRO
#     [store_unit]
#         [filter]
#             side=1
#             x,y=recall,recall
#             [not]
# 				race=merman
# 				[or]
# 					id=Meneldur
# 				[/or]
# 				[or]
# 					id=Madru
# 				[/or]
# 				[or]
# 					id="Black the Red"
# 				[/or]
# 			[/not]
#         [/filter]
#         variable=temp
#     [/store_unit]
#     [recall]
#         variable=temp
#     [/recall]
#     [clear_variable]
#         name=temp
#     [/clear_variable]
# #enddef
#
# #define HEROMACRO X
#     [store_unit]
#         [filter]
#             id={X}
#         [/filter]
#         variable=temp{X}
#         kill=yes
#     [/store_unit]
# #enddef
#
# #define RECALLMACRO X
#     {VARIABLE $temp{X}.hitpoints $temp{X}.max_hitpoints}
#     [unstore_unit]
#         variable=temp{X}
#     [/unstore_unit]
#     [recall]
#         role=temp{X}
#     [/recall]
#     [recall]
#         id={X}
#     [/recall]
#     [clear_variable]
#         name=temp{X}
#     [/clear_variable]
# #enddef

#define SE_SCHEDULE LOOP
    [event]
        name=prestart

        {VARIABLE loop {LOOP}}

        [switch]
            variable=time.id

            [case]
                value=afternoon

                {IF_VAR loop equals main (
                    [then]
                        [replace_schedule]
                            {DEFAULT_SCHEDULE_DUSK}
                        [/replace_schedule]
                    [/then]
                    [else]
                        [replace_schedule]
                            {DUSK}
                        [/replace_schedule]
                    [/else]
                )}
            [/case]

            [case]
                value=dusk

                {IF_VAR loop equals main (
                    [then]
                        [replace_schedule]
                            {DEFAULT_SCHEDULE_FIRST_WATCH}
                        [/replace_schedule]
                    [/then]
                    [else]
                        [replace_schedule]
                            {FIRST_WATCH}
                        [/replace_schedule]
                    [/else]
                )}
            [/case]

            [case]
                value=first_watch

                {IF_VAR loop equals main (
                    [then]
                        [replace_schedule]
                            {DEFAULT_SCHEDULE_SECOND_WATCH}
                        [/replace_schedule]
                    [/then]
                    [else]
                        [replace_schedule]
                            {SECOND_WATCH}
                        [/replace_schedule]
                    [/else]
                )}
            [/case]

            [case]
                value=second_watch

                {IF_VAR loop equals main (
                    [then]
                        [replace_schedule]
                            {DEFAULT_SCHEDULE_DAWN}
                        [/replace_schedule]
                    [/then]
                    [else]
                        [replace_schedule]
                            {DAWN}
                        [/replace_schedule]
                    [/else]
                )}
            [/case]

            [case]
                value=dawn

                {IF_VAR loop equals main (
                    [then]
                        [replace_schedule]
                            {DEFAULT_SCHEDULE_MORNING}
                        [/replace_schedule]
                    [/then]
                    [else]
                        [replace_schedule]
                            {MORNING}
                        [/replace_schedule]
                    [/else]
                )}
            [/case]

            [case]
                value=morning

                {IF_VAR loop equals main (
                    [then]
                        [replace_schedule]
                            {DEFAULT_SCHEDULE_AFTERNOON}
                        [/replace_schedule]
                    [/then]
                    [else]
                        [replace_schedule]
                            {AFTERNOON}
                        [/replace_schedule]
                    [/else]
                )}
            [/case]
        [/switch]
        {CLEAR_VARIABLE time}

        [event]
            name=new turn
            first_time_only=no

            [store_time_of_day]
                variable=time
            [/store_time_of_day]

            {VARIABLE shedule $turn_number}
            {VARIABLE_OP shedule modulo 6}
            [if]
                [variable]
                    name=shedule
                    equals=0
                [/variable]
                [variable]
                    name=loop
                    not_equals=main
                [/variable]
                [then]
                    [switch]
                        variable=time.id

                        [case]
                            value=afternoon
                            [replace_schedule]
                                {DUSK}
                            [/replace_schedule]
                        [/case]

                        [case]
                            value=dusk
                            [replace_schedule]
                                {FIRST_WATCH}
                            [/replace_schedule]
                        [/case]

                        [case]
                            value=first_watch
                            [replace_schedule]
                                {SECOND_WATCH}
                            [/replace_schedule]
                        [/case]

                        [case]
                            value=second_watch
                            [replace_schedule]
                                {DAWN}
                            [/replace_schedule]
                        [/case]

                        [case]
                            value=dawn
                            [replace_schedule]
                                {MORNING}
                            [/replace_schedule]
                        [/case]

                        [case]
                            value=morning
                            [replace_schedule]
                                {AFTERNOON}
                            [/replace_schedule]
                        [/case]
                    [/switch]
                [/then]
            [/if]
            {CLEAR_VARIABLE time,shedule}
        [/event]
    [/event]

    [event]
        name=victory

        [store_time_of_day]
            variable=time
        [/store_time_of_day]
    [/event]
#enddef
