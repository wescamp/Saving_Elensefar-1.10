#textdomain wesnoth-Saving_Elensefar

# inspire > meneldur
# distract and blitz > Madru
# battle tutor > Black the Red

#define SPECIAL_NOTES_DISTRACT
#textdomain wesnoth-trow
    _" This unit is capable of distracting opponents, allowing allied units to trespass their Zones of Control and move unhindered around them."
#enddef

#define SPECIAL_NOTES_INSPIRE
#textdomain wesnoth-thot
    _" The presence of this unit inspires own units next to it to deal more damage in combat, though this only applies to units of lower or equal level."
#enddef

#define ABILITY_DISTRACT
#textdomain wesnoth-trow
    [skirmisher]
        id=distract
        name= _ "distract"
        description= _ "Distract:
This unit negates enemy Zones of Control around itself for allied units (but not for itself)."
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
        [/affect_adjacent]
    [/skirmisher]
#enddef

#define ABILITY_INSPIRE_LEVEL_3
#textdomain wesnoth-thot
    # Canned definition of the Inspire (level 3) ability to be included in an
    # [abilities] clause.
    [leadership]
        id=inspire_0
        value=100
        cumulative=no
        name= _ "inspire"
        description= _ "Inspire:
This unit can inspire own L0, L1, L2, or L3 units that are next to it, making them fight better. Adjacent own units of L3 will do more 25% more damage; L2 units will do 50% more, L1 will do 75% more, and L0 units will do 100% more."
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_1
        value=75
        cumulative=no
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_2
        value=50
        cumulative=no
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_3
        value=25
        cumulative=no
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=3
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_INSPIRE_LEVEL_2
#textdomain wesnoth-thot
    # Canned definition of the Inspire (level 2) ability to be included in an
    # [abilities] clause.
    [leadership]
        id=inspire_0
        value=75
        cumulative=no
        name= _ "inspire"
        description= _ "Inspire:
This unit can inspire own L0, L1, or L2 units that are next to it, making them fight better. Adjacent own units of L2 will do more 25% more damage; L1 units will do 50% more, and L0 will do 75% more."
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_1
        value=50
        cumulative=no
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_2
        value=25
        cumulative=no
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_BLITZ
    # wmllint: unbalanced-on
    [blitz]
        id=blitz
        name= _ "blitz"
        description= _ "Blitz:
Allies that start their turn adjacent to this unit are granted Skirmisher for that turn."
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
        [/affect_adjacent]
    [/blitz]
[/abilities]
[event]
    name=side turn
    first_time_only=no

    [store_unit]
        [filter]
            side=$side_number
            [and]
                [filter_adjacent]
                    ability=blitz
                    is_enemy=no
                [/filter_adjacent]
            [/and]
            [not]
                ability=skirmisher
                [or]
                    ability=blitz
                [/or]
            [/not]
        [/filter]
        variable=blitzed_on
    [/store_unit]

    {FOREACH blitzed_on a}
        [object]
            silent="yes"
            [filter]
                x,y=$blitzed_on[$a].x,$blitzed_on[$a].y
            [/filter]
            [effect]
                apply_to=new_ability
                [abilities]
                    {ABILITY_SKIRMISHER}
                [/abilities]
            [/effect]
            [effect]
                apply_to=status
                add=blitzed
            [/effect]
        [/object]
    {NEXT a}
    {CLEAR_VARIABLE blitzed_on}
    [redraw][/redraw]

    [event]
        name=side turn end

        [store_unit]
            [filter]
                [filter_wml]
                    [status]
                        blitzed=yes
                    [/status]
                [/filter_wml]
            [/filter]
            variable=blitzed_off
        [/store_unit]

        {FOREACH blitzed_off b}
            [set_variables]
                name=blitzed_off[$b].abilities.skirmisher
                mode=replace
                [value]
                [/value]
            [/set_variables]
            [unstore_unit]
                variable=blitzed_off[$b]
            [/unstore_unit]
            [object]
                silent="yes"
                [filter]
                    x,y=$blitzed_off[$b].x,$blitzed_off[$b].y
                [/filter]
                [effect]
                    apply_to=status
                    remove=blitzed
                [/effect]
            [/object]
        {NEXT b}
        {CLEAR_VARIABLE blitzed_off}
        [redraw][/redraw]
    [/event]
[/event]
[+abilities]
#enddef

#define ABILITY_BATTLETUTOR_2
    [battle_tutor]
        id=battletutor_2
        name= _ "battle tutor"
        description= _ "Battle Tutor:
This unit's ability to teach battle skills gives each adjacent allied unit a small boost to experience earned in battle."
    [/battle_tutor]
[/abilities]
[event]
    name=attack
    first_time_only=no

    [filter]
        ability=battletutor_2
    [/filter]

    [filter_attack]
        range=melee
    [/filter_attack]

    [store_unit]
        [filter]
            [filter_adjacent]
                ability=battletutor_2
                is_enemy=no
            [/filter_adjacent]
        [/filter]
        variable=to_be_teach
    [/store_unit]

    [event]
        name=attack end
        delayed_variable_substitution=yes

        {FOREACH to_be_teach i}
            {VARIABLE to_be_teach[$i].experience $second_unit.level}
            [unstore_unit]
                variable=to_be_teach[$i]
                text=_ "+ $second_unit.level| XP"
                red,green,blue=0,200,0
                fire_event=yes
            [/unstore_unit]
        {NEXT i}
        {CLEAR_VARIABLE to_be_teach}
    [/event]
[/event]
[+abilities]
#enddef

#define ABILITY_BATTLETUTOR_3
    [battle_tutor]
        id=battletutor_3
        name= _ "Battle Tutor"
        description= _ "Battle Tutor:
This unit's ability to teach battle skills gives each adjacent allied unit a small boost to his experience earned in battle."
    [/battle_tutor]
[/abilities]
[event]
    name=attack
    first_time_only=no

    [filter]
        ability=battletutor_3
    [/filter]

    [filter_attack]
        range=melee
    [/filter_attack]

    [store_unit]
        [filter]
            [filter_adjacent]
                ability=battletutor_3
                is_enemy=no
            [/filter_adjacent]
        [/filter]
        variable=to_be_teach
    [/store_unit]
    {VARIABLE hits $second_unit.level}

    [event]
        name=attacker hits
        first_time_only=no
        {VARIABLE_OP hits add 1}
    [/event]

    [event]
        name=attack end
        delayed_variable_substitution=yes

        {IF_VAR second_unit.experience greater_than $hits (
            [then]
                {VARIABLE_OP second_unit.experience sub $hits}
            [/then]
            [else]
                {VARIABLE second_unit.experience 0}
            [/else]
        )}

        [unstore_unit]
            variable=second_unit
        [/unstore_unit]

        {FOREACH to_be_teach i}
            {VARIABLE_OP to_be_teach[$i].experience add $hits}
            [unstore_unit]
                variable=to_be_teach[$i]
                text=_ "+ $hits| XP"
                red,green,blue=0,200,0
                fire_event=yes
            [/unstore_unit]
        {NEXT i}
        {CLEAR_VARIABLE to_be_teach,hits}
    [/event]
[/event]
[+abilities]
#enddef
