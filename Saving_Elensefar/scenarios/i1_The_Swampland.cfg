#textdomain wesnoth-Saving_Elensefar

#define CHECK_DIR X Y SIDE X_DIR Y_DIR
    {VARIABLE X {X}}
    {VARIABLE Y {Y}}
    {VARIABLE_OP X add {X_DIR}}
    {VARIABLE_OP Y add {Y_DIR}}

    #Count number of other side's checkers
    {VARIABLE enemies 0}
    [while]
        [have_unit]
            [not]
                side={SIDE}
            [/not]
            x=$X
            y=$Y
        [/have_unit]
        [do]
            {VARIABLE_OP enemies add 1}
            {VARIABLE_OP X add {X_DIR}}
            {VARIABLE_OP Y add {Y_DIR}}
        [/do]
    [/while]

    #If other side has more than 1 checker and your unit is next
    [if]
        [variable]
            name=enemies
            greater_than=0
        [/variable]
        [have_unit]
            side={SIDE}
            x=$X
            y=$Y
        [/have_unit]
        [then]
            #This is a valid direction, so add it
            {VARIABLE valid_dir_$valid_dir_count|_x {X_DIR}}
            {VARIABLE valid_dir_$valid_dir_count|_y {Y_DIR}}
            {VARIABLE_OP valid_dir_count add 1}

            # prepare variables
            {VARIABLE valid_move yes}
            {VARIABLE valid_x {X}}
            {VARIABLE valid_y {Y}}
            {VARIABLE valid_side {SIDE}}
        [/then]
    [/if]
    {CLEAR_VARIABLE X,Y,enemies}
#enddef

#define CHECK_MOVE X Y SIDE
    [if]
        [variable]
            name=valid_move
            equals=no
        [/variable]
        [not]
            [have_unit]
                x,y={X},{Y}
            [/have_unit]
        [/not]
        [then]
            #Check all directions
            {CHECK_DIR {X} {Y} {SIDE} -2 -2}
            {CHECK_DIR {X} {Y} {SIDE} -2 0}
            {CHECK_DIR {X} {Y} {SIDE} -2 2}
            {CHECK_DIR {X} {Y} {SIDE} 0 -2}
            {CHECK_DIR {X} {Y} {SIDE} 0 2}
            {CHECK_DIR {X} {Y} {SIDE} 2 -2}
            {CHECK_DIR {X} {Y} {SIDE} 2 0}
            {CHECK_DIR {X} {Y} {SIDE} 2 2}
        [/then]
    [/if]
#enddef

#define MOVE_TO_BOARD INSERT_CHECKER_WML
    [if]
        [variable]
            name=valid_move
            equals=yes
        [/variable]
        [then]
            #Place unit on the board
            {INSERT_CHECKER_WML}

            {VARIABLE_OP checker_count add 1}

            #Change sides in all valid directions
            [while]
                [variable]
                    name=valid_dir_count
                    greater_than=0
                [/variable]
                [do]
                    {VARIABLE X $valid_x}
                    {VARIABLE Y $valid_y}

                    {VARIABLE_OP valid_dir_count sub 1}
                    {VARIABLE_OP x_dir to_variable valid_dir_$valid_dir_count|_x}
                    {VARIABLE_OP y_dir to_variable valid_dir_$valid_dir_count|_y}

                    #Change sides of other side's units
                    {VARIABLE_OP X add $x_dir}
                    {VARIABLE_OP Y add $y_dir}
                    [while]
                        [have_unit]
                            [not]
                                side=$valid_side
                            [/not]
                            x=$X
                            y=$Y
                        [/have_unit]
                        [do]
                            {MODIFY_UNIT (x,y=$X,$Y) side $valid_side}
                            [capture_village]
                                side=$valid_side
                                x,y=$X,$Y
                            [/capture_village]
                            {VARIABLE_OP X add $x_dir}
                            {VARIABLE_OP Y add $y_dir}
                        [/do]
                    [/while]
                [/do]
            [/while]
        [/then]
        [else]
            {IF_VAR none_played greater_than 0 (
                [then]
                    {VARIABLE none_played yes}
                [/then]
                [else]
                    {VARIABLE_OP none_played add 1}
                [/else]
            )}
        [/else]
    [/if]
#enddef

#define ENDLEVEL
    linger_mode=yes
    carryover_report=no
    carryover_add=yes
    carryover_percentage=80
#enddef

#define CHECK_GAME_OVER
    #End level if neither player made a move last turn
    [store_unit]
        [filter]
            side=1
            canrecruit=no
        [/filter]
        variable=side_1_units
    [/store_unit]
    [store_unit]
        [filter]
            side=2
            canrecruit=no
        [/filter]
        variable=side_2_units
    [/store_unit]

    {IF_VAR side_1_units.length less_than 1 (
        [then]
            [endlevel]
                result=defeat
                {ENDLEVEL}
            [/endlevel]
        [/then]
    )}
    {IF_VAR side_2_units.length less_than 1 (
        [then]
            {MODIFY_UNIT (id=Othello) side 1}
            [endlevel]
                result=victory
                {ENDLEVEL}
            [/endlevel]
        [/then]
    )}

    {REMOVE_LABEL 11 2}
    {SET_LABEL 11 2 "<span color='red'>$side_1_units.length|</span> <b>:</b> <span color='blue'>$side_2_units.length|</span>"}

    [if]
        [variable]
            name=checker_count
            equals=32
        [/variable]
        [or]
            [variable]
                name=none_played
                equals=yes
            [/variable]
        [/or]
        [then]
            [if]
                [variable]
                    name=side_1_units.length
                    greater_than_equal_to=$side_2_units.length
                [/variable]
#ifdef HARD
                [and]
                    [have_unit]
                        side=1
                        id=Madru
                    [/have_unit]
                    [have_unit]
                        side=1
                        id=Black the Red
                    [/have_unit]
                [/and]
#endif
#ifdef NORMAL
                [and]
                    [have_unit]
                        side=1
                        id=Madru
                    [/have_unit]
                    [or]
                        [have_unit]
                            side=1
                            id=Black the Red
                        [/have_unit]
                    [/or]
                [/and]
#endif
                [then]
                    [endlevel]
                        result=victory
                        {ENDLEVEL}
                    [/endlevel]
                [/then]
                [else]
                    [endlevel]
                        result=defeat
                        {ENDLEVEL}
                    [/endlevel]
                [/else]
            [/if]
        [/then]
    [/if]
    {CLEAR_VARIABLE side_1_units,side_2_units}
#enddef

#define SE_RECALL_OR_CREATE_UNIT X Y TYPE
    [recall]
        side=1
        x,y={X},{Y}
    [/recall]
    [if]
        [not]
            [have_unit]
                side=1
                x,y={X},{Y}
            [/have_unit]
        [/not]
        [then]
            {GENERIC_UNIT 1 {TYPE} {X} {Y}}
        [/then]
    [/if]
#enddef

[scenario]
    id=sea_voyage_1
    next_scenario=sea_voyage_0
    name= _ "The Swampland"
    victory_when_enemies_defeated=no
    map_data="{~add-ons/Saving_Elensefar/maps/The_Swampland_2.map}"
    turns=-1

    {SE_SCHEDULE lone}
    {MOOD_NORMAL}
    {VICTORY_AND_DEFEAT_MUSIC}
    {SE_SCENARIO_MUSIC a3deap_HighInTheMountains}

    [side]
        {MENELDUR_SIDE}
        village_gold=0
        income=-1
    [/side]

    [side]
        side=2
        controller=ai
        id=Othello
        name= _"Othello"
        type=Necromancer
        canrecruit=yes
        income=-2
        team_name=bad
        user_team_name= _"Crazy Horse"
        village_gold=0
        {FLAG_VARIANT undead}
    [/side]

    [event]
        name=prestart

        [objectives]
            side=1
            summary= _ "Play a game of Reversi with Othello"
            [objective]
                description= _ "Capture more units than Othello does"
                condition=win
            [/objective]
            [objective]
                description= _ "Othello finish with more units"
                condition=lose
            [/objective]
#ifdef NORMAL
            [objective]
                description= _ "You lose <b>both</b> Madru and Black the Red"
                condition=lose
            [/objective]
#endif
#ifdef HARD
            [objective]
                description= _ "You lose <b>either</b> Madru or Black the Red"
                condition=lose
            [/objective]
#endif
            [note]
                description=_"A move is valid if Othello's units will be between two of yours. To place a unit on the board:"
            [/note]
            [note]
                description=_"(1) Move Meneldur to a ruined castle at the bottom to select the column"
            [/note]
            [note]
                description=_"(2) Move Meneldur again to a ruined castle now at the left to select the row"
            [/note]
            [note]
                description=_"(3) If the move is valid an unit will be recalled at the given place"
            [/note]
            [note]
                description=_"(4) And any enemy units standing between two of yours will swap side."
            [/note]
            [note]
                description=_"(5) The game continues until the board is full, or neither leader could do a move."
            [/note]
        [/objectives]
    [/event]

    [event]
        name=start

        [recall]
            id=Madru
        [/recall]
        [recall]
            id=Black the Red
        [/recall]

        [message]
            id=Meneldur
            message= _ "What is this, a mage walks clad in black? Explain yourself! Are you of the red mages, or the white?"
        [/message]
        [message]
            id=Othello
            message= _ "What? Do you mean to tell me that the great lich Jevyan does not reign on that continent, or that his mages no longer wear the robes of the necromancer?!?"
        [/message]

        [teleport]
            x,y=12,10
            [filter]
                id=Madru
            [/filter]
        [/teleport]
        [teleport]
            x,y=10,12
            [filter]
                id=Black the Red
            [/filter]
        [/teleport]

        {LOYAL_UNIT 2 (Revenant) 10 10}
        {LOYAL_UNIT 2 (Necrophage) 12 12}

#ifdef DEBUG_MODE
        {NAMED_LOYAL_UNIT 1 (Elvish Archer) 12 10 (Madru) ( _ "Madru")}
        {NAMED_LOYAL_UNIT 1 (Elvish Fighter) 10 12 (Black the Red) ( _ "Black the Red")}
#endif

        [message]
            id=Madru
            message= _ "What? Why do you speak of those old tales as if they were real? And I suppose you think you are a real necromancer too."
        [/message]
        [message]
            id=Black the Red
            message= _ "Why do you say he's not a necromancer? I've seen them before, haven't you?"
        [/message]
        [message]
            id=Meneldur
            message= _ "Are you saying undead exist?"
        [/message]
        [message]
            id=Black the Red
            message= _ "Yes. And this guy looks real enough. I think we should treat him like an actual enemy."
        [/message]
        [message]
            id=Othello
            message= _ "Yes, you should! Now, prepare to die!"
        [/message]
        [message]
            id=Madru
            message= _ "Whatever. We will see if he actually can raise anything, and if we come out of here."
        [/message]

        [store_unit]
            [filter]
                side=1
                [or]
                    side=2
                [/or]
            [/filter]
            variable=mod
        [/store_unit]

        {FOREACH mod i}
            [set_variables]
                name=mod[$i].variables.original_movement_costs
                [value]
                    swamp_water=$mod[$i].movement_costs.swamp_water
                    flat=$mod[$i].movement_costs.flat
                    sand=$mod[$i].movement_costs.sand
                [/value]
            [/set_variables]
            {VARIABLE mod[$i].movement_costs.flat 99}
            {VARIABLE mod[$i].movement_costs.sand 99}
            {VARIABLE mod[$i].movement_costs.swamp_water 99}
            [unstore_unit]
                variable=mod[$i]
            [/unstore_unit]
        {NEXT i}
    [/event]

    [event]
        name=victory

        [kill]
            side=2
            [not]
                id=Madru
            [/not]
            [not]
                id=Black the Red
            [/not]
        [/kill]

        [if]
            [have_unit]
                id=Othello
            [/have_unit]
            [then]
                [message]
                    id=Othello
                    message= _ "Impressive. You were able to storm my game. May I join you on your quest?"
                [/message]
                [message]
                    id=Meneldur
                    message= _ "Err"
                [/message]
                [message]
                    id=Black the Red
                    message= _ "Sure, we need any willing hand"
                [/message]
            [/then]
            [else]
                [message]
                    id=Meneldur
                    message= _ "That was a weird battle..."
                [/message]
                [message]
                    id=Madru
                    message= _ "... in the magic castle."
                [/message]
                [message]
                    id=Black the Red
                    message= _ "Look, we have gain more soldiers for our quest. Wy did you complain?"
                [/message]
            [/else]
        [/if]

        {FOREACH mod i}
            {VARIABLE mod[$i].side 1}
            {VARIABLE mod[$i].movement_costs.flat $mod[$i].variables.original_movement_costs.flat}
            {VARIABLE mod[$i].movement_costs.sand $mod[$i].variables.original_movement_costs.sand}
            {VARIABLE mod[$i].movement_costs.swamp_water $mod[$i].variables.original_movement_costs.swamp_water}
            [unstore_unit]
                variable=mod[$i]
            [/unstore_unit]
        {NEXT i}
        {CLEAR_VARIABLE x_dir,y_dir,valid_dir_count,X,Y,valid_x,valid_y,mod,valid_move,none_played}
        {CLEAR_VARIABLE valid_dir_1_x,valid_dir_2_x,valid_dir_3_x,valid_dir_4_x}
        {CLEAR_VARIABLE valid_dir_1_y,valid_dir_2_y,valid_dir_3_y,valid_dir_4_y}
    [/event]

    [event]
        name=new turn
        first_time_only=no

        # teleport the leaders back to the keep
        [teleport]
            x,y=11,19
            [filter]
                id=Meneldur
            [/filter]
        [/teleport]
        [teleport]
            x,y=11,4
            [filter]
                id=Othello
            [/filter]
        [/teleport]
        {CLEAR_VARIABLE none_played}
        {VARIABLE valid_dir_count 0}
        {VARIABLE valid_move no}
        {VARIABLE col -1}
        {VARIABLE row -1}
    [/event]

    [event]
        name=turn refresh
        first_time_only=no
        {MODIFY_UNIT (canrecruit=no) moves 0}
    [/event]

    [event]
        name=moveto
        first_time_only=no

        [filter]
            id=Meneldur
        [/filter]

        {MODIFY_UNIT (id=Meneldur) moves 10}

        [if]
            [have_location]
                x,y=$x1,$y1
                terrain=Chr
            [/have_location]
            [then]
                #If at column castle, go to row castle
                [if]
                    [variable]
                        name=x1
                        greater_than=4
                    [/variable]
                    [then]
                        {VARIABLE col $x1}

                        {VARIABLE A 6}
                        [while]
                            [variable]
                                name=A
                                less_than=17
                            [/variable]
                            [do]
                                {VARIABLE B 6}
                                [while]
                                    [variable]
                                        name=B
                                        less_than=17
                                    [/variable]
                                    [do]
                                        {IF_VAR A not_equals $col (
                                            [then]
                                                [remove_item]
                                                    x,y=$A,$B
                                                [/remove_item]
                                            [/then]
                                        )}
                                        {VARIABLE_OP B add 2}
                                    [/do]
                                [/while]
                                {CLEAR_VARIABLE B}
                                {VARIABLE_OP A add 2}
                            [/do]
                        [/while]
                        {CLEAR_VARIABLE A}

                        {PLACE_IMAGE "items/red-hex.png" $x1 6}
                        {PLACE_IMAGE "items/red-hex.png" $x1 8}
                        {PLACE_IMAGE "items/red-hex.png" $x1 10}
                        {PLACE_IMAGE "items/red-hex.png" $x1 12}
                        {PLACE_IMAGE "items/red-hex.png" $x1 14}
                        {PLACE_IMAGE "items/red-hex.png" $x1 16}

                        [delay]
                            time=500
                        [/delay]
                        [sound]
                            name=magic-dark-miss.ogg
                        [/sound]
                        [teleport]
                            x,y=3,12
                            [filter]
                                x,y=$x1,$y1
                            [/filter]
                        [/teleport]
                    [/then]

                    #If at row castle, go to column castle
                    [else]
                        {VARIABLE row $y1}

                        {VARIABLE A 6}
                        [while]
                            [variable]
                                name=A
                                less_than=17
                            [/variable]
                            [do]
                                {VARIABLE B 6}
                                [while]
                                    [variable]
                                        name=B
                                        less_than=17
                                    [/variable]
                                    [do]
                                        {IF_VAR B not_equals $row (
                                            [then]
                                                [remove_item]
                                                    x,y=$A,$B
                                                [/remove_item]
                                            [/then]
                                        )}
                                        {VARIABLE_OP B add 2}
                                    [/do]
                                [/while]
                                {CLEAR_VARIABLE B}
                                {VARIABLE_OP A add 2}
                            [/do]
                        [/while]
                        {CLEAR_VARIABLE A}

                        {PLACE_IMAGE "items/blue-hex.png" 6 $y1}
                        {PLACE_IMAGE "items/blue-hex.png" 8 $y1}
                        {PLACE_IMAGE "items/blue-hex.png" 10 $y1}
                        {PLACE_IMAGE "items/blue-hex.png" 12 $y1}
                        {PLACE_IMAGE "items/blue-hex.png" 14 $y1}
                        {PLACE_IMAGE "items/blue-hex.png" 16 $y1}
                        [delay]
                            time=500
                        [/delay]
                        [sound]
                            name=magic-dark.ogg
                        [/sound]
                        [teleport]
                            x,y=11,19
                            [filter]
                                x,y=$x1,$y1
                            [/filter]
                        [/teleport]
                    [/else]
                [/if]
            [/then]
        [/if]

        [if]
            [variable]
                name=col
                greater_than=0
            [/variable]
            [variable]
                name=row
                greater_than=0
            [/variable]
            [then]
                {CHECK_MOVE $col $row 1}
            [/then]
        [/if]

        {IF_VAR valid_move equals yes (
            [then]
                [end_turn][/end_turn]
            [/then]
        )}
    [/event]

    [event]
        name=side 1 turn end
        first_time_only=no

        {MOVE_TO_BOARD (
            [scroll_to]
                x,y=$valid_x,$valid_y
            [/scroll_to]
            [delay]
                time=1000
            [/delay]
            [sound]
                name={SOUND_LIST:GRYPHON_HIT}
            [/sound]
            {VARIABLE n $turn_number}
            {VARIABLE_OP n modulo 3}
            [switch]
                variable=n
                [case]
                    value=0
                    {SE_RECALL_OR_CREATE_UNIT $valid_x $valid_y "Thief"}
                [/case]
                [else]
                    {SE_RECALL_OR_CREATE_UNIT $valid_x $valid_y "Thug"}
                [/else]
            [/switch]
            {CLEAR_VARIABLE n}
            [delay]
                time=500
            [/delay]
        )}
        {CHECK_GAME_OVER}

        {VARIABLE A 6}
        [while]
            [variable]
                name=A
                less_than=17
            [/variable]
            [do]
                {VARIABLE B 6}
                [while]
                    [variable]
                        name=B
                        less_than=17
                    [/variable]
                    [do]
                        [remove_item]
                            x,y=$A,$B
                        [/remove_item]
                        {VARIABLE_OP B add 2}
                    [/do]
                [/while]
                {CLEAR_VARIABLE B}
                {VARIABLE_OP A add 2}
            [/do]
        [/while]
        {CLEAR_VARIABLE A}
    [/event]

    [event]
        name=ai turn
        first_time_only=no

        #Find best AI move
        {VARIABLE valid_move no}

        #Check corners
        {CHECK_MOVE 6 6 2}
        {CHECK_MOVE 6 16 2}
        {CHECK_MOVE 16 6 2}
        {CHECK_MOVE 16 16 2}

        #Check edges not adjacent to corners
        {CHECK_MOVE 10 6 2}
        {CHECK_MOVE 10 16 2}
        {CHECK_MOVE 12 6 2}
        {CHECK_MOVE 12 16 2}
        {CHECK_MOVE 6 10 2}
        {CHECK_MOVE 6 12 2}
        {CHECK_MOVE 16 10 2}
        {CHECK_MOVE 16 12 2}

        #Check central locations not adjacent to corners
        {CHECK_MOVE 10 8 2}
        {CHECK_MOVE 12 8 2}
        {CHECK_MOVE 8 10 2}
        {CHECK_MOVE 10 10 2}
        {CHECK_MOVE 12 10 2}
        {CHECK_MOVE 14 10 2}
        {CHECK_MOVE 8 12 2}
        {CHECK_MOVE 10 12 2}
        {CHECK_MOVE 12 12 2}
        {CHECK_MOVE 14 12 2}
        {CHECK_MOVE 10 14 2}
        {CHECK_MOVE 12 14 2}

        #Check edge locations adjacent to corners
        {CHECK_MOVE 8 6 2}
        {CHECK_MOVE 14 6 2}
        {CHECK_MOVE 8 16 2}
        {CHECK_MOVE 14 16 2}
        {CHECK_MOVE 6 8 2}
        {CHECK_MOVE 6 14 2}
        {CHECK_MOVE 16 8 2}
        {CHECK_MOVE 16 14 2}

        #Check locations diagonal and adjacent to corners
        {CHECK_MOVE 8 8 2}
        {CHECK_MOVE 8 14 2}
        {CHECK_MOVE 14 8 2}
        {CHECK_MOVE 14 14 2}

        {MOVE_TO_BOARD (
            [scroll_to_unit]
                id=Othello
            [/scroll_to_unit]
            [delay]
                time=1000
            [/delay]
            {MOVE_UNIT (id=Othello) $valid_x 4}
            [delay]
                time=1000
            [/delay]
            [sound]
                name=magic-dark-miss.ogg
            [/sound]
            [teleport]
                x,y=19,12
                [filter]
                    id=Othello
                [/filter]
            [/teleport]
            [scroll_to_unit]
                id=Othello
            [/scroll_to_unit]
            [delay]
                time=1000
            [/delay]
            {MOVE_UNIT (id=Othello) 18 $valid_y}
            [delay]
                time=1000
            [/delay]
            [scroll_to]
                x=$valid_x
                y=$valid_y
            [/scroll_to]
            [delay]
                time=1000
            [/delay]
            [sound]
                name={SOUND_LIST:ZOMBIE_HIT}
            [/sound]
            {VARIABLE n $turn_number}
            {VARIABLE_OP n modulo 3}
            [switch]
                variable=n
                [case]
                    value=0
                    {GENERIC_UNIT 2 "Ghoul" $valid_x $valid_y}
                [/case]
                [else]
                    {GENERIC_UNIT 2 "Soulless" $valid_x $valid_y}
                [/else]
            [/switch]
            {CLEAR_VARIABLE n}
            [delay]
                time=1000
            [/delay]
        )}
        {CHECK_GAME_OVER}
        [end_turn][/end_turn]
    [/event]
[/scenario]

#undef SE_RECALL_OR_CREATE_UNIT X Y TYPE
#undef CHECK_GAME_OVER
#undef ENDLEVEL
#undef CHECK_DIR X Y SIDE X_DIR Y_DIR
#undef CHECK_MOVE X Y SIDE
#undef MOVE_TO_BOARD INSERT_CHECKER_WML
