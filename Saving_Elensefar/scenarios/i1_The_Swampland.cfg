#textdomain wesnoth-Saving_Elensefar

[scenario]
    id=sea_voyage_1
    next_scenario=sea_voyage_0
    name= _ "The Swampland"
    victory_when_enemies_defeated=no
    disallow_recall=yes
    map_data="{~add-ons/Saving_Elensefar/maps/The_Swampland.map}"
    turns=-1

#define CLEAR_ITEMS
    {VARIABLE A 6}
    [while]
        {VARIABLE_CONDITIONAL A less_than 21}
        [do]
            {VARIABLE B 6}
            [while]
                {VARIABLE_CONDITIONAL B less_than 21}
                [do]
                    [remove_item]
                        x,y=$A,$B
                    [/remove_item]
                    {VARIABLE_OP B add 2}
                [/do]
            [/while]
            {CLEAR_VARIABLE B}
            {VARIABLE_OP A add 2}
        [/do]
    [/while]
    {CLEAR_VARIABLE A}
#enddef

#define CHECK_ALL_MOVES SIDE
    #Check corners
    {CHECK_MOVE 6 6 {SIDE}}
    {CHECK_MOVE 20 20 {SIDE}}
    {CHECK_MOVE 6 20 {SIDE}}
    {CHECK_MOVE 20 6 {SIDE}}

    #Check central corners
    {CHECK_MOVE 10 10 {SIDE}}
    {CHECK_MOVE 16 16 {SIDE}}
    {CHECK_MOVE 16 10 {SIDE}}
    {CHECK_MOVE 10 16 {SIDE}}

    #Check edges not adjacent to corners
    {CHECK_MOVE 6 10 {SIDE}}
    {CHECK_MOVE 6 12 {SIDE}}
    {CHECK_MOVE 6 14 {SIDE}}
    {CHECK_MOVE 6 16 {SIDE}}
    {CHECK_MOVE 20 10 {SIDE}}
    {CHECK_MOVE 20 12 {SIDE}}
    {CHECK_MOVE 20 14 {SIDE}}
    {CHECK_MOVE 20 16 {SIDE}}
    {CHECK_MOVE 10 6 {SIDE}}
    {CHECK_MOVE 12 6 {SIDE}}
    {CHECK_MOVE 14 6 {SIDE}}
    {CHECK_MOVE 16 6 {SIDE}}
    {CHECK_MOVE 10 20 {SIDE}}
    {CHECK_MOVE 12 20 {SIDE}}
    {CHECK_MOVE 14 20 {SIDE}}
    {CHECK_MOVE 16 20 {SIDE}}

    #Check central locations not adjacent to edges
    {CHECK_MOVE 12 10 {SIDE}}
    {CHECK_MOVE 14 10 {SIDE}}
    {CHECK_MOVE 16 12 {SIDE}}
    {CHECK_MOVE 16 14 {SIDE}}
    {CHECK_MOVE 10 12 {SIDE}}
    {CHECK_MOVE 10 14 {SIDE}}
    {CHECK_MOVE 12 16 {SIDE}}
    {CHECK_MOVE 14 16 {SIDE}}

    #Check adjacent to edges
    {CHECK_MOVE 10 8 {SIDE}}
    {CHECK_MOVE 12 8 {SIDE}}
    {CHECK_MOVE 14 8 {SIDE}}
    {CHECK_MOVE 16 8 {SIDE}}
    {CHECK_MOVE 10 18 {SIDE}}
    {CHECK_MOVE 12 18 {SIDE}}
    {CHECK_MOVE 14 18 {SIDE}}
    {CHECK_MOVE 16 18 {SIDE}}
    {CHECK_MOVE 8 10 {SIDE}}
    {CHECK_MOVE 8 12 {SIDE}}
    {CHECK_MOVE 8 14 {SIDE}}
    {CHECK_MOVE 8 16 {SIDE}}
    {CHECK_MOVE 18 10 {SIDE}}
    {CHECK_MOVE 18 12 {SIDE}}
    {CHECK_MOVE 18 14 {SIDE}}
    {CHECK_MOVE 18 16 {SIDE}}

    #Check edge locations adjacent to corners
    {CHECK_MOVE 8 6 {SIDE}}
    {CHECK_MOVE 6 8 {SIDE}}
    {CHECK_MOVE 18 6 {SIDE}}
    {CHECK_MOVE 20 8 {SIDE}}
    {CHECK_MOVE 6 18 {SIDE}}
    {CHECK_MOVE 8 20 {SIDE}}
    {CHECK_MOVE 18 20 {SIDE}}
    {CHECK_MOVE 20 18 {SIDE}}

    #Check locations diagonal and adjacent to corners
    {CHECK_MOVE 8 8 {SIDE}}
    {CHECK_MOVE 18 8 {SIDE}}
    {CHECK_MOVE 8 18 {SIDE}}
    {CHECK_MOVE 18 18 {SIDE}}
#enddef

#define CHECK_DIR X Y SIDE X_DIR Y_DIR
    {VARIABLE X {X}}
    {VARIABLE Y {Y}}
    {VARIABLE_OP X add {X_DIR}}
    {VARIABLE_OP Y add {Y_DIR}}

    #Count number of other side's checkers
    {VARIABLE enemies 0}
    [while]
        [have_unit]
            [not]
                side={SIDE}
            [/not]
            x,y=$X,$Y
        [/have_unit]
        [do]
            {VARIABLE_OP enemies add 1}
            {VARIABLE_OP X add {X_DIR}}
            {VARIABLE_OP Y add {Y_DIR}}
        [/do]
    [/while]

    #If other side has more than 1 checker and your unit is next
    [if]
        {VARIABLE_CONDITIONAL enemies greater_than 0}
        [have_unit]
            side={SIDE}
            x,y=$X,$Y
        [/have_unit]
        [then]
            #This is a valid direction, so add it
            {VARIABLE valid_dir_$valid_dir_count|_x {X_DIR}}
            {VARIABLE valid_dir_$valid_dir_count|_y {Y_DIR}}
            {VARIABLE_OP valid_dir_count add 1}

            # prepare variables
            {VARIABLE valid_move yes}
            {VARIABLE valid_x {X}}
            {VARIABLE valid_y {Y}}
            {VARIABLE valid_side {SIDE}}
        [/then]
    [/if]
    {CLEAR_VARIABLE X,Y,enemies}
#enddef

#define CHECK_MOVE X Y SIDE
    [if]
        {VARIABLE_CONDITIONAL valid_move equals no}
        [not]
            [have_unit]
                x,y={X},{Y}
            [/have_unit]
        [/not]
        [then]
            #Check all directions
            {CHECK_DIR {X} {Y} {SIDE} -2 -2}
            {CHECK_DIR {X} {Y} {SIDE} -2 0}
            {CHECK_DIR {X} {Y} {SIDE} -2 2}
            {CHECK_DIR {X} {Y} {SIDE} 0 -2}
            {CHECK_DIR {X} {Y} {SIDE} 0 2}
            {CHECK_DIR {X} {Y} {SIDE} 2 -2}
            {CHECK_DIR {X} {Y} {SIDE} 2 0}
            {CHECK_DIR {X} {Y} {SIDE} 2 2}
        [/then]
    [/if]
#enddef

#define MOVE_TO_BOARD INSERT_CHECKER_WML
    [if]
        {VARIABLE_CONDITIONAL valid_move equals yes}
        [then]
            #Place unit on the board
            {INSERT_CHECKER_WML}

            {VARIABLE_OP checker_count add 1}

            #Change sides in all valid directions
            [while]
                {VARIABLE_CONDITIONAL valid_dir_count greater_than 0}
                [do]
                    {VARIABLE X $valid_x}
                    {VARIABLE Y $valid_y}

                    {VARIABLE_OP valid_dir_count sub 1}
                    {VARIABLE_OP x_dir to_variable valid_dir_$valid_dir_count|_x}
                    {VARIABLE_OP y_dir to_variable valid_dir_$valid_dir_count|_y}

                    #Change sides of other side's units
                    {VARIABLE_OP X add $x_dir}
                    {VARIABLE_OP Y add $y_dir}
                    [while]
                        [have_unit]
                            [not]
                                side=$valid_side
                            [/not]
                            x,y=$X,$Y
                        [/have_unit]
                        [do]
                            {MODIFY_UNIT (x,y=$X,$Y) side $valid_side}
                            [capture_village]
                                side=$valid_side
                                x,y=$X,$Y
                            [/capture_village]
                            {VARIABLE_OP X add $x_dir}
                            {VARIABLE_OP Y add $y_dir}
                        [/do]
                    [/while]
                [/do]
            [/while]
        [/then]
        [else]
            {IF_VAR none_played greater_than 0 (
                [then]
                    {VARIABLE none_played yes}
                [/then]
                [else]
                    {VARIABLE_OP none_played add 1}
                [/else]
            )}
        [/else]
    [/if]
#enddef

#define CHECK_GAME_OVER
    [store_unit]
        [filter]
            side=1
            canrecruit=no
            [not]
                x,y=recall,recall
            [/not]
        [/filter]
        variable=side_1_units
    [/store_unit]
    [store_unit]
        [filter]
            side=2
            canrecruit=no
        [/filter]
        variable=side_2_units
    [/store_unit]

    {REMOVE_LABEL 9 2}
    {SET_LABEL 9 2 "<span color='red'>$side_1_units.length|</span> <b>:</b> <span color='blue'>$side_2_units.length|</span>"}

    {IF_VAR side_1_units.length equals 0 (
        [then]
            [endlevel]
                result=defeat
            [/endlevel]
        [/then]
    )}

    {IF_VAR side_2_units.length equals 0 (
        [then]
#ifndef EXPERIMENTAL
            {MODIFY_UNIT (id=Othello) canrecruit no}
#endif
            {MODIFY_UNIT (id=Othello) side 1}
            {SE_ENDLEVEL no no}
        [/then]
    )}

    [if]
        {VARIABLE_CONDITIONAL checker_count equals 60}
        [or]
            {VARIABLE_CONDITIONAL none_played equals yes}
        [/or]
        [then]
            [if]
                {VARIABLE_CONDITIONAL side_1_units.length greater_than_equal_to $side_2_units.length}
#ifdef HARD
                [and]
                    [have_unit]
                        side=1
                        id=Madru
                    [/have_unit]
                    [have_unit]
                        side=1
                        id="Black the Red"
                    [/have_unit]
                [/and]
#endif
#ifdef NORMAL
                [and]
                    [have_unit]
                        side=1
                        id=Madru
                    [/have_unit]
                    [or]
                        [have_unit]
                            side=1
                            id="Black the Red"
                        [/have_unit]
                    [/or]
                [/and]
#endif
                [then]
                    [message]
                        image="wesnoth-icon.png"
                        caption= _ "You win!"
                        message= _ "You: $side_1_units.length
Othello: $side_2_units.length"
                    [/message]
                    {IF_VAR none_played equals yes (
                        [then]
#ifndef EXPERIMENTAL
                            {MODIFY_UNIT (id=Othello) canrecruit no}
#endif
                            {MODIFY_UNIT (id=Othello) side 1}
                        [/then]
                        [else]
                            [kill]
                                id=Othello
                                fire_event=no
                                animate=no
                            [/kill]
                        [/else]
                    )}
                    {SE_ENDLEVEL no no}
                [/then]
                [else]
                    [message]
                        image="wesnoth-icon.png"
                        caption= _ "You lost."
                        message= _ "You: $side_1_units.length
Othello: $side_2_units.length"
                    [/message]
                    [endlevel]
                        result=defeat
                    [/endlevel]
                [/else]
            [/if]
        [/then]
    [/if]
    {CLEAR_VARIABLE side_1_units,side_2_units}
#enddef

#define SE_RECALL_OR_CREATE_UNIT X Y TYPE
    [recall]
        side=1
        x,y={X},{Y}
    [/recall]
    [if]
        [not]
            [have_unit]
                side=1
                x,y={X},{Y}
            [/have_unit]
        [/not]
        [then]
            {GENERIC_UNIT 1 {TYPE} {X} {Y}}
            [+unit]
                [variables]
                    new_unit=yes
                [/variables]
            [/unit]
        [/then]
    [/if]
#enddef

    {SE_SCHEDULE}

    {MOOD_NORMAL}
    {VICTORY_AND_DEFEAT_MUSIC}
    {SE_SCENARIO_MUSIC a3deap_HighInTheMountains}

    {MENELDUR_SIDE}
#ifndef EXPERIMENTAL
    [+side]
        village_gold=0
        income=-2
    [/side]
#endif

    [side]
        side=2
        controller=ai
        id=Othello
        name= _"Othello"
        type=Necromancer
        canrecruit=yes
        gold=0
        income=-2
        team_name=bad
        user_team_name= _"Crazy Horse"
        village_gold=0
        recruit=""
        unrenamable=yes
#ifdef EXPERIMENTAL
#ifdef EASY
        extra_recruit=Walking Corpse,Soulless,Ghoul,Vampire Bat,Blood Bat
#else
        extra_recruit=Walking Corpse,Ghoul,Vampire Bat
#endif
        [filter_recall]
            type={FILTER_UNDEAD_NON_SKELET}
        [/filter_recall]
        {IS_EXPENDABLE_LEADER}
#else
        {IS_LOYAL}
#endif
        {FLAG_VARIANT undead}
        [ai]
            ai_algorithm=idle_ai
            {AI_NO_RECRUITMENT}
        [/ai]
    [/side]

    [event]
        name=prestart

        [objectives]
            side=1
            summary= _ "Play a game of Reversi with Othello"
            [objective]
                description= _ "Capture more units than Othello does"
                condition=win
            [/objective]
            [objective]
                description= _ "Othello finish with more units"
                condition=lose
            [/objective]
#ifdef NORMAL
            [objective]
                description= _ "You lose <b>both</b> Madru and Black the Red"
                condition=lose
            [/objective]
#endif
#ifdef HARD
            [objective]
                description= _ "You lose <b>either</b> Madru or Black the Red"
                condition=lose
            [/objective]
#endif
            notes_string=_"<b>How to Play</b>" # wmllint: ignore
            [note]
                description=_"A move is valid if Othello's units will be between two of yours. To place a unit on the board:"
            [/note]
            [note]
                description=_"(1) Move Meneldur to a ruined castle at the bottom to select the column"
            [/note]
            [note]
                description=_"(2) Move Meneldur again to a ruined castle now at the left to select the row"
            [/note]
            [note]
                description=_"(3) If the move is valid an unit will be recalled at the given place"
            [/note]
            [note]
                description=_"(4) And any enemy units standing between two of yours will swap side."
            [/note]
            [note]
                description=_"(5) The game continues until the board is full, or neither leader could do a move."
            [/note]
        [/objectives]
    [/event]

    [event]
        name=start

        [recall]
            id=Madru
            x,y=12,14
        [/recall]
        [recall]
            id="Black the Red"
            x,y=14,12
        [/recall]

        [fire_event]
            name=supply_calculation
        [/fire_event]
        # only start of scenario upkeep
        {CLEAR_VARIABLE supply_calculation}

        [store_unit]
            [filter]
                side=1
                {EVERYWHERE}
            [/filter]
            variable=mod
        [/store_unit]

        {FOREACH mod i}
            [set_variables]
                name=mod[$i].variables.original_movement_costs
                [value]
                    swamp_water=$mod[$i].movement_costs.swamp_water
                    flat=$mod[$i].movement_costs.flat
                    sand=$mod[$i].movement_costs.sand
                [/value]
            [/set_variables]
            {VARIABLE mod[$i].movement_costs.flat 99}
            {VARIABLE mod[$i].movement_costs.sand 99}
            {VARIABLE mod[$i].movement_costs.swamp_water 99}
            [unstore_unit]
                variable=mod[$i]
            [/unstore_unit]
        {NEXT i}

        [message]
            id=Meneldur
            message= _ "What is this, a mage walks clad in black? Explain yourself! Are you of the red mages, or the white?"
        [/message]
        [message]
            id=Othello
            message= _ "What? Do you mean to tell me that the great lich Jevyan does not reign on that continent, or that his mages no longer wear the robes of the necromancer?!?"
        [/message]

        {LOYAL_UNIT 2 (Revenant) 12 12}
        {LOYAL_UNIT 2 (Necrophage) 14 14}

        [message]
            id=Madru
            message= _ "What? Why do you speak of those old tales as if they were real? And I suppose you think you are a real necromancer too."
        [/message]
        [message]
            id="Black the Red"
            message= _ "Why do you say he's not a necromancer? I've seen them before, haven't you?"
        [/message]
        [message]
            id=Meneldur
            message= _ "Are you saying undead exist?"
        [/message]
        [message]
            id="Black the Red"
            message= _ "Yes. And this guy looks real enough. I think we should treat him like an actual enemy."
        [/message]
        [message]
            id=Othello
            message= _ "Yes, you should! Now, prepare to die!"
        [/message]
        [message]
            id=Madru
            message= _ "Whatever. We will see if he actually can raise anything, and if we come out of here."
        [/message]
    [/event]

    [event]
        name=victory

        [if]
            [have_unit]
                id=Othello
                side=1
            [/have_unit]
            [then]
                [message]
                    id=Othello
                    message= _ "Impressive. You were able to storm my game. May I join you on your quest?"
                [/message]
                [message]
                    id=Meneldur
                    message= _ "Err"
                [/message]
                [message]
                    id="Black the Red"
                    message= _ "Sure, we need any willing hand"
                [/message]
            [/then]
            [else]
                [message]
                    id=Meneldur
                    message= _ "That was a weird battle..."
                [/message]
                [message]
                    id=Madru
                    message= _ "... in the magic castle."
                [/message]
                [message]
                    id="Black the Red"
                    message= _ "Look, we have gain more soldiers for our quest. Wy did you complain?"
                [/message]
            [/else]
        [/if]

        {FOREACH mod i}
            {VARIABLE mod[$i].side 1}
            {VARIABLE mod[$i].movement_costs.flat $mod[$i].variables.original_movement_costs.flat}
            {VARIABLE mod[$i].movement_costs.sand $mod[$i].variables.original_movement_costs.sand}
            {VARIABLE mod[$i].movement_costs.swamp_water $mod[$i].variables.original_movement_costs.swamp_water}
            [unstore_unit]
                variable=mod[$i]
            [/unstore_unit]
        {NEXT i}

        {CLEAR_VARIABLE x_dir,y_dir,valid_dir_count,X,Y,valid_x,valid_y,mod,valid_move,none_played,checker_count,col,row,valid_side}
        {CLEAR_VARIABLE valid_dir_0_x,valid_dir_1_x,valid_dir_2_x,valid_dir_3_x,valid_dir_4_x}
        {CLEAR_VARIABLE valid_dir_0_y,valid_dir_1_y,valid_dir_2_y,valid_dir_3_y,valid_dir_4_y}
    [/event]

    [event]
        name=new turn
        first_time_only=no

        # teleport the leaders back to the keep
        [teleport]
            x,y=13,22
            [filter]
                id=Meneldur
            [/filter]
        [/teleport]
        [teleport]
            x,y=13,5
            [filter]
                id=Othello
            [/filter]
        [/teleport]
        {CLEAR_VARIABLE none_played}
        {VARIABLE valid_dir_count 0}
        {VARIABLE valid_move no}
        {VARIABLE col -1}
        {VARIABLE row -1}
    [/event]

    [event]
        name=turn refresh
        first_time_only=no
        {MODIFY_UNIT (canrecruit=no) moves 0}
        {MODIFY_UNIT (canrecruit=yes) moves 8}
    [/event]

    [event]
        name=moveto
        first_time_only=no

        [filter]
            id=Meneldur
        [/filter]

        {MODIFY_UNIT (id=Meneldur) moves 16}

        [if]
            [have_location]
                x,y=$x1,$y1
                terrain=Chr
            [/have_location]
            [then]
                #If at column castle, go to row castle
                [if]
                    {VARIABLE_CONDITIONAL x1 greater_than 4}
                    [then]
                        {VARIABLE col $x1}
                        {CLEAR_ITEMS}

                        {PLACE_IMAGE "items/red-hex.png" $x1 6}
                        {PLACE_IMAGE "items/red-hex.png" $x1 8}
                        {PLACE_IMAGE "items/red-hex.png" $x1 10}
                        {PLACE_IMAGE "items/red-hex.png" $x1 12}
                        {PLACE_IMAGE "items/red-hex.png" $x1 14}
                        {PLACE_IMAGE "items/red-hex.png" $x1 16}
                        {PLACE_IMAGE "items/red-hex.png" $x1 18}
                        {PLACE_IMAGE "items/red-hex.png" $x1 20}

                        [sound]
                            name=magic-dark-miss.ogg
                        [/sound]
                        [delay]
                            time=500
                        [/delay]
                        [teleport]
                            x,y=4,13
                            [filter]
                                x,y=$x1,$y1
                            [/filter]
                        [/teleport]
                        [scroll_to_unit]
                            id=Meneldur
                        [/scroll_to_unit]
                    [/then]

                    #If at row castle, go to column castle
                    [else]
                        {VARIABLE row $y1}
                        {CLEAR_ITEMS}

                        {PLACE_IMAGE "items/blue-hex.png" 6 $y1}
                        {PLACE_IMAGE "items/blue-hex.png" 8 $y1}
                        {PLACE_IMAGE "items/blue-hex.png" 10 $y1}
                        {PLACE_IMAGE "items/blue-hex.png" 12 $y1}
                        {PLACE_IMAGE "items/blue-hex.png" 14 $y1}
                        {PLACE_IMAGE "items/blue-hex.png" 16 $y1}
                        {PLACE_IMAGE "items/blue-hex.png" 18 $y1}
                        {PLACE_IMAGE "items/blue-hex.png" 20 $y1}

                        [sound]
                            name=magic-dark.ogg
                        [/sound]
                        [delay]
                            time=500
                        [/delay]
                        [teleport]
                            x,y=13,22
                            [filter]
                                x,y=$x1,$y1
                            [/filter]
                        [/teleport]
                        [scroll_to_unit]
                            id=Meneldur
                        [/scroll_to_unit]
                    [/else]
                [/if]
            [/then]
        [/if]

        [if]
            {VARIABLE_CONDITIONAL col greater_than 0}
            {VARIABLE_CONDITIONAL row greater_than 0}
            [then]
                {CHECK_MOVE $col $row 1}
            [/then]
        [/if]

        {IF_VAR valid_move equals yes (
            [then]
                [end_turn][/end_turn]
            [/then]
        )}
    [/event]

    [event]
        name=side 1 turn end
        first_time_only=no

        {IF_VAR valid_move not_equals yes (
            [then]
                {CHECK_ALL_MOVES 1}
            [/then]
        )}

        {MOVE_TO_BOARD (
            [scroll_to]
                x,y=$valid_x,$valid_y
            [/scroll_to]
            [delay]
                time=1000
            [/delay]
            [sound]
                name={SOUND_LIST:GRYPHON_HIT}
            [/sound]
            {VARIABLE n $turn_number}
            {VARIABLE_OP n modulo 3}
            [switch]
                variable=n
                [case]
                    value=0
                    {SE_RECALL_OR_CREATE_UNIT $valid_x $valid_y "Thief"}
                [/case]
                [else]
                    {SE_RECALL_OR_CREATE_UNIT $valid_x $valid_y "Thug"}
                [/else]
            [/switch]
            {CLEAR_VARIABLE n}
            [delay]
                time=500
            [/delay]
        )}
        {CHECK_GAME_OVER}
        {CLEAR_ITEMS}
    [/event]

    [event]
        name=side 2 turn
        first_time_only=no

        #Find best AI move
        {VARIABLE valid_move no}
        {CHECK_ALL_MOVES 2}

        {MOVE_TO_BOARD (
            [scroll_to_unit]
                id=Othello
            [/scroll_to_unit]
            [delay]
                time=1000
            [/delay]
            {MOVE_UNIT (id=Othello) $valid_x 4}
            [sound]
                name=magic-dark-miss.ogg
            [/sound]
            [delay]
                time=1000
            [/delay]
            [teleport]
                x,y=22,13
                [filter]
                    id=Othello
                [/filter]
            [/teleport]
            [scroll_to_unit]
                id=Othello
            [/scroll_to_unit]
            [delay]
                time=1000
            [/delay]
            {MOVE_UNIT (id=Othello) 22 $valid_y}
            [delay]
                time=1000
            [/delay]
            [scroll_to]
                x=$valid_x
                y=$valid_y
            [/scroll_to]
            [delay]
                time=1000
            [/delay]
            [sound]
                name={SOUND_LIST:ZOMBIE_HIT}
            [/sound]
            {VARIABLE n $turn_number}
            {VARIABLE_OP n modulo 3}
            [switch]
                variable=n
                [case]
                    value=0
                    {GENERIC_UNIT 2 "Ghoul" $valid_x $valid_y}
                    [+unit]
                        [variables]
                            new_unit=yes
                        [/variables]
                    [/unit]
                [/case]
                [else]
                    {GENERIC_UNIT 2 "Soulless" $valid_x $valid_y}
                    [+unit]
                        [variables]
                            new_unit=yes
                        [/variables]
                    [/unit]
                [/else]
            [/switch]
            {CLEAR_VARIABLE n}
            [delay]
                time=1000
            [/delay]
        )}
        {CHECK_GAME_OVER}
        [end_turn][/end_turn]
    [/event]

    ##clean the recall list of Meneldur
    [event]
        name=victory

        [store_unit]
            [filter]
                side=1
                type=Thief
                [filter_wml]
                    [variables]
                        new_unit=yes
                    [/variables]
                [/filter_wml]
            [/filter]
            variable=thiefs
        [/store_unit]

        [store_unit]
            [filter]
                side=1
                type=Thug
                [filter_wml]
                    [variables]
                        new_unit=yes
                    [/variables]
                [/filter_wml]
            [/filter]
            variable=thugs
        [/store_unit]

        [store_unit]
            [filter]
                side=1
                type=Soulless
                [filter_wml]
                    [variables]
                        new_unit=yes
                    [/variables]
                [/filter_wml]
            [/filter]
            variable=zombies
        [/store_unit]

        [store_unit]
            [filter]
                side=1
                type=Ghoul
                [filter_wml]
                    [variables]
                        new_unit=yes
                    [/variables]
                [/filter_wml]
            [/filter]
            variable=ghouls
        [/store_unit]

        {FOREACH thiefs i}
            {IF_VAR i greater_than 2 (
                [then]
                    [kill]
                        id=$thiefs[$i].id
                    [/kill]
                [/then]
            )}
        {NEXT i}

        {FOREACH thugs i}
            {IF_VAR i greater_than 4 (
                [then]
                    [kill]
                        id=$thugs[$i].id
                    [/kill]
                [/then]
            )}
        {NEXT i}

        {FOREACH zombies i}
            {IF_VAR i greater_than 2 (
                [then]
                    [kill]
                        id=$zombies[$i].id
                    [/kill]
                [/then]
            )}
        {NEXT i}

        {FOREACH ghouls i}
            {IF_VAR i greater_than 4 (
                [then]
                    [kill]
                        id=$ghouls[$i].id
                    [/kill]
                [/then]
            )}
        {NEXT i}
        {CLEAR_VARIABLE thiefs,thugs,zombies,ghouls}
    [/event]
[/scenario]

#undef CLEAR_ITEMS
#undef CHECK_ALL_MOVES SIDE
#undef CHECK_DIR X Y SIDE X_DIR Y_DIR
#undef CHECK_MOVE X Y SIDE
#undef MOVE_TO_BOARD INSERT_CHECKER_WML
#undef CHECK_GAME_OVER
#undef SE_RECALL_OR_CREATE_UNIT X Y TYPE
